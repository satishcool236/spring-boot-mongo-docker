node{
    stage("Git CheckOut"){
        git url: 'https://github.com/satishcool236/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    stage("Build Docker Image") {
         sh "docker build -t satish236/spring-boot-mongo ."
    }
    
    stage("Docker Push"){
        withCredentials([string(credentialsId: 'Docker_hub', variable: 'Docker_hub')]) {
            sh "docker login -u satish236 -p ${Docker_hub}"
        }
        sh "docker push satish236/spring-boot-mongo"
        
    }
    
    // Remove local image in Jenkins Server
    stage("Remove Local Image"){
        sh "docker rmi -f satish236/spring-boot-mongo"
    }
    stage("Deploy to docker swarm cluster"){
        sshagent(['docker_swar']) {
		    sh 'scp -o StrictHostKeyChecking=no  docker-compose.yml ubuntu@172.31.38.36:'
		    //sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.38.36 docker stack rm springboot'
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.38.36 docker stack deploy --prune --compose-file docker-compose.yml springboot'
        }
    }
}

